import CarouselComponent from "@/components/elements/CarouselComponent";
import ContainerTabButtons from "@/components/elements/ContainerTabButtons";
import HeroSection from "@/components/elements/HeroSection";
import NoOffersComponent from "@/components/elements/NoOffersComponent";
import SectionTitle from "@/components/elements/SectionTitle";
import SeeMoreLink from "@/components/elements/SeeMoreLink";
import BestMoments, { GalleryImage } from "@/components/templates/BestMoments";
import ContainerArrangements from "@/components/templates/ContainerArrangements";
import HomepageGroupTravelImages from "@/components/templates/HomepageGroupTravelImages";
import TestimonialSection from "@/components/templates/TestimonialSection";
import { getRegionsArray } from "@/helpers/getRegions";
import { chunkArrangements } from "@/helpers/getSubArrayWithCountriesForCarousel";
import { Arrangements, Testimonials } from "@/types/data";

import { GetServerSideProps } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";

interface Props {
  arrangements: Arrangements[];
  dataRegionsToFilterBy: Arrangements[];
  imagesData: GalleryImage[];
  testimonialsData: Testimonials[];
}

export default function Home({
  arrangements,
  imagesData,
  testimonialsData,
  dataRegionsToFilterBy,
}: Props) {
  const [screenWidth, setScreenWidth] = useState(0);

  useEffect(() => {
    setScreenWidth(window.innerWidth);
  }, []);

  const chunkArr = chunkArrangements(arrangements);

  const regionsCountry = getRegionsArray(dataRegionsToFilterBy);

  return (
    <>
      <Head>
        <title>Инфинити Травел</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo.jpg" />
      </Head>
      <main>
        <HeroSection
          imgSrc="images/banner-homepage.jpg"
          showSearchBarInBanner={true}
        />
        <div className="w90 section-divider">
          <SectionTitle title="Актуелни понуди" />

          <ContainerTabButtons
            nameToFilterBy={regionsCountry}
            pageNameButtonAt="pocetna"
          />

          {screenWidth > 1000 && arrangements.length > 4 ? (
            <CarouselComponent arrangements={chunkArr} />
          ) : (
            <ContainerArrangements arrangements={arrangements} />
          )}
          {arrangements.length === 0 ? (
            <NoOffersComponent />
          ) : (
            <SeeMoreLink linkTo={arrangements[0]?.Location.Country} />
          )}
        </div>
        <HomepageGroupTravelImages />
        <div className="w90 section-divider">
          <TestimonialSection testimonials={testimonialsData} />
        </div>
        <div className="w90 section-divider">
          <BestMoments images={imagesData} />
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const region = query.region;
  const lastMinute = query.IsLastMinute;

  let link: string;

  if (region) {
    link = `https://trapezoidal-sharp-quark.glitch.me/arrangements?Location.Country_like=Грција&Location.Region_like=${region}`;
  } else if (lastMinute) {
    link = `https://trapezoidal-sharp-quark.glitch.me/arrangements?Location.Country_like=Грција&IsLastMinute_like=true`;
  } else {
    link =
      "https://trapezoidal-sharp-quark.glitch.me/arrangements?Location.Country_like=Грција";
  }

  const res = await fetch(link);
  const arrangements: Arrangements[] = await res.json();

  const resRegionsToFilterBy = await fetch(
    "https://trapezoidal-sharp-quark.glitch.me/arrangements?Location.Country_like=Грција"
  );
  const dataRegionsToFilterBy: Arrangements[] =
    await resRegionsToFilterBy.json();

  const resImages = await fetch(
    "https://trapezoidal-sharp-quark.glitch.me/bestMomentsGallery"
  );
  const imagesData: Arrangements[] = await resImages.json();

  const resTestimonials = await fetch(
    "https://trapezoidal-sharp-quark.glitch.me/testimonials"
  );
  const testimonialsData: Testimonials[] = await resTestimonials.json();

  return {
    props: {
      arrangements,
      imagesData,
      testimonialsData,
      dataRegionsToFilterBy,
    },
  };
};
